name: Build

on:
  workflow_dispatch:
    inputs:
      build_variant:
        type: choice
        default: Standalone
        options:
          - Standalone
          - Debug
          - Alpha
          - Release
      is_huawei:
        type: boolean
        default: False
      
jobs:
  build:
    runs-on: ubuntu-latest # [self-hosted, ptg]
    steps:
      - name: Parse Version
        run: cat TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java ^
          | grep -oP '(?<=PARTISAN_VERSION_STRING = ")[0-9\.]+' ^
          | sed 's/.*/GITHUB_APP_VERSION=&/' >> $GITHUB_ENV
          cat TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java ^
          | grep -oP '(?<=PARTISAN_BUILD_VERSION = )[0-9\.]+' ^
          | sed 's/.*/GITHUB_APP_VERSION_CODE=&/' >> $GITHUB_ENV
      - name: Create Lowercase Build Variant
        run: echo "${{ github.event.inputs.build_variant }}" | sed -e 's/\(.*\)/GITHUB_BUILD_VARIANT_LOWERCASE=\L\1/' >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Set Build Variant
        run: |
          sed -i 's/assembleAfatStandalone/assembleAfat${{ github.event.inputs.build_variant }}/g' Dockerfile
          sed -i 's/TMessagesProj_App/TMessagesProj_App${{ github.event.inputs.is_huawei && 'Huawei' || '' }}/g' Dockerfile
      - name: Build docker image
        run: docker build -t telegram-build .
      - name: Build app
        run: docker run --rm -v "$PWD":/home/source telegram-build
      - name: Print Hash
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: sha256sum TMessagesProj/build/outputs/apk/afat/${{env.GITHUB_BUILD_VARIANT_LOWERCASE}}/app${{ github.event.inputs.is_huawei && '-huawei' || '' }}.apk
      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: PTelegram-v${{env.GITHUB_APP_VERSION_CODE}}.apk
          path: TMessagesProj/build/outputs/apk/afat/${{env.GITHUB_BUILD_VARIANT_LOWERCASE}}/app${{ github.event.inputs.is_huawei && '-huawei' || '' }}.apk
